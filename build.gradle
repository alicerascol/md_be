buildscript {
    ext {
        kotlinVersion = '1.3.72'
        springBootVersion = '2.2.4.RELEASE'
        postgresVersion = '42.2.13'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("io.spring.gradle:dependency-management-plugin:0.5.1.RELEASE")
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")

        // Required for Kotlin integration
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
//        // add docker dependency
        classpath("org.springframework.boot:spring-boot-gradle-plugin:2.0.3.RELEASE")
//        // using Gradle you need to add a new docker plugin like this:
        classpath('se.transmode.gradle:gradle-docker:1.2')
    }
}

plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id 'org.springframework.boot' version '2.2.4.RELEASE'
    id "org.flywaydb.flyway" version "6.5.5"
}

apply plugin: 'kotlin' // Required for Kotlin integration
apply plugin: "kotlin-spring" // https://kotlinlang.org/docs/reference/compiler-plugins.html#spring-support
apply plugin: "kotlin-jpa"
apply plugin: 'org.springframework.boot'
// apply this docker plugin
apply plugin: 'docker'


group 'org.university'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.hibernate', name: 'hibernate-envers', version: '5.4.18.Final'
    compile group: 'com.azure', name: 'azure-storage-blob', version: '12.0.0'
    compile group: 'javax.mail', name: 'mail', version: '1.4.1'
    compile group: 'org.json', name: 'json', version: '20200518'

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.3.72"
    implementation("org.springframework.boot:spring-boot-starter-web:${springBootVersion}")
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation("org.springframework.data:spring-data-commons:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}")
    implementation("org.springframework.boot:spring-boot-starter-data-jpa:${springBootVersion}")
    implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8")
    implementation("org.jetbrains.kotlin:kotlin-reflect")
    implementation("com.fasterxml.jackson.core:jackson-core:2.10.1")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.10.1")
    implementation("com.fasterxml.jackson.core:jackson-annotations:2.10.1")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.10.1")
    implementation("com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.10.1")
    implementation('com.fasterxml.jackson.module:jackson-module-kotlin:2.10.1')
    implementation('com.fasterxml.jackson.module:jackson-module-parameter-names:2.10.1')
    implementation("io.springfox:springfox-swagger-ui:2.9.2")
    implementation("io.springfox:springfox-swagger2:2.9.2")
    implementation("org.apache.tomcat.embed:tomcat-embed-core:9.0.35")
    implementation("org.apache.tomcat:tomcat-annotations-api:9.0.35")
    implementation("org.apache.tomcat.embed:tomcat-embed-el:9.0.35")
    implementation("org.apache.tomcat.embed:tomcat-embed-websocket:9.0.35")
    implementation("io.micrometer:micrometer-core:1.2.1")
    implementation("io.micrometer:micrometer-registry-prometheus:1.2.1")
    implementation("org.flywaydb:flyway-core:6.5.5")
    implementation("com.sendgrid:sendgrid-java:4.6.4")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9")

    runtime("org.postgresql:postgresql:$postgresVersion")
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

bootJar {
    mainClassName = "com.md.ApplicationKt"
}
